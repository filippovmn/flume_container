### ====================  омпоненты узла ==================== ###
# ѕеречисл€ем все основные компоненты, из которых будет состо€ть наш узел: источники, каналы и узлы

# <agent>.sources - имена источников, разделенные пробелом (в этом примере один источник: my_source)
my-agent.sources = SeqSource
# <agent>.channels - аналогично указываем имена каналов
my-agent.channels = my-channel
# <agent>.sinks - дл€ стоков то же самое
my-agent.sinks = my-sink

### ==================== »сточник my_source ================== ###
# в общем случае здесь можно указать полное им€ класса источника, в т.ч., вашего собственного)
my-agent.sources.SeqSource.type = seq 

### ====================  анал my_channel ================== ###
# »спользуем тип канала из пакета Flume - memory (как и с источником, здесь можно казать свой класс), который хранит событи€ в пам€ти
my-agent.channels.my-channel.type = memory
# ¬местимость канала, кол_во событий
my-agent.channels.my-channel.capacity = 10000
# „исло событий в одной транзакции (как на добавление, так и на "выт€гивание")
my-agent.channels.my-channel.transactionCapacity = 100

### ==================== —ток my_sink ================== ###
# “ип стока - логгер, пишуший событи€ в консоль (и здесь также можно указать свой класс)
my-agent.sinks.my-sink.type = logger
# »з какого канала будем забирать событи€
my-agent.sinks.my-sink.channel = my-channel
# Ќастройка исключительно дл€ стока типа logger - сколько первых байт тела событи€ выводить в консоль
my-agent.sinks.my-sink.maxBytesToLog = 256

my-agent.sources.SeqSource.channels = my-channel